package TR0727;

/**
 * 多态：父类的引用指向子类对象,从而可以虚拟方法调用
 * 继承和重写是多态的前提，还有方法的重写
 * 只与方法有关，与属性无关
 *
 *
 * 多态的用处：
 * 编译时使用父类作为形参，调用父类声明的方法，但运行时实际上执行的是实际上new的对象所属的类的重写的方法
 * 编译看左边，运行看右边
 *
 * 好处：
 * 提高了代码的通用性，可以作为接口重用
 *
 * 对于多态，只有当方法调用的时候，解释运行期才会确定要调用的具体的方法//晚绑定
 * 对于重载，方法调用之前，编译器就已经确认了要调用的方法//早绑定
 * 因此Java是动态语言
 */
public class T03_duotai {
    public static void main(String[] args) {
        //父类的引用（变量）指向子类的对象
        Pet p = new Dog();
        //p.的时候只能看见Person的方法，但真正运行的子类的覆盖的方法

    }
}
